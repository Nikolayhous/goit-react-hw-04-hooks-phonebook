{"version":3,"sources":["Component/ContactForm/Form.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/App/App.module.css","Component/Container/Container.module.css","Component/Container/Container.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","Component/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","agree","setAgree","handleChange","e","target","value","resetForm","section__form","form","preventDefault","contact","id","uuidv4","label","inputName","type","placeholder","pattern","title","required","onChange","label__agree","checkbox","checked","btn","disabled","Filter","filter","input","ContactList","contacts","onDeleteContactList","totalNumber","length","contactList","list","map","item","text","onClick","total__number","App","JSON","parse","window","localStorage","getItem","initialContacts","setContacts","setFilter","useEffect","setItem","stringify","data","some","element","toLowerCase","alert","contactFilter","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34e2b686.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__form\":\"Form_section__form__Z4TiH\",\"form\":\"Form_form__4zoJL\",\"label\":\"Form_label__351_K\",\"label__agree\":\"Form_label__agree__3pjm6\",\"checkbox\":\"Form_checkbox__1gZde\",\"inputName\":\"Form_inputName__1SsV-\",\"btn\":\"Form_btn__2n3w3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3vOQY\",\"list\":\"ContactList_list__2DLZ3\",\"item\":\"ContactList_item__g0dCl\",\"info\":\"ContactList_info__1dmw6\",\"text\":\"ContactList_text__2x6NT\",\"total__number\":\"ContactList_total__number__nxeCn\",\"btn\":\"ContactList_btn__1Exq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1QmDw\",\"label\":\"Filter_label__HuSD9\",\"input\":\"Filter_input__3b6Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2PFCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2zkta\"};","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [agree, setAgree] = useState(false);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n        onSubmit(contact);\r\n        resetForm();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleAgreeChange = e => {\r\n        setAgree(e.target.checked);\r\n        // this.setState({ agree: e.target.checked });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n        setAgree(false);\r\n    };\r\n\r\n    return (\r\n        <div className={s.section__form}>\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                <label className={s.label}>\r\n                    Name\r\n                    <input\r\n                        className={s.inputName}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    Number\r\n                    <input\r\n                        className={s.inputName}\r\n                        type=\"tel\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        placeholder=\"Enter number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label className={s.label__agree}>\r\n                    <input\r\n                        className={s.checkbox}\r\n                        value={agree}\r\n                        type=\"checkbox\"\r\n                        name=\"agree\"\r\n                        checked={agree}\r\n                        onChange={handleAgreeChange}\r\n                    />\r\n                    agree\r\n                </label>\r\n\r\n                <button className={s.btn} disabled={!agree}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func,\r\n    handleChange: PropTypes.func,\r\n    handleAgreeChange: PropTypes.func,\r\n    nameId: PropTypes.number,\r\n    numberId: PropTypes.number,\r\n    agreeId: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filter, onChange }) {\n    return (\n        <div className={s.filter}>\n            <label className={s.label}>\n                Find contacts by name\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={filter}\n                    onChange={onChange}\n                />\n            </label>\n        </div>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactList({ contacts, onDeleteContactList }) {\n    const totalNumber = contacts.length;\n\n    return (\n        <div className={s.contactList}>\n            <ul className={s.list}>\n                {contacts.map(({ name, number, id }) => (\n                    <li className={s.item} key={id}>\n                        <p className={s.text}>{name}:</p>\n                        <p className={`${s.text} ${s.number}`}>{number}</p>\n                        <button\n                            className={s.btn}\n                            type=\"button\"\n                            onClick={() => onDeleteContactList(id)}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <p className={s.total__number}>\n                Total number of subscribers:{totalNumber}\n            </p>\n        </div>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ),\n\n    onDeleteContactList: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\r\nimport s from './App.module.css';\r\nimport Container from '../Container';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport initialContacts from '../../initialContacts.json';\r\n\r\nfunction App() {\r\n    const [contacts, setContacts] = useState(() => {\r\n        return JSON.parse(\r\n            window.localStorage.getItem('contacts') ?? initialContacts,\r\n        );\r\n    });\r\n    const [filter, setFilter] = useState('');\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n    const formSubmitHandler = data => {\r\n        if (\r\n            contacts.some(\r\n                element =>\r\n                    element.name.toLowerCase() === data.name.toLowerCase(),\r\n            )\r\n        ) {\r\n            return alert('This contact has already been added to the list');\r\n        }\r\n\r\n        setContacts([data, ...contacts]);\r\n    };\r\n\r\n    const changeFilter = e => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    const getVisibleContact = () => {\r\n        const contactFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(contactFilter),\r\n        );\r\n    };\r\n\r\n    const deleteContactList = contactId => {\r\n        setContacts(contacts.filter(contact => contact.id !== contactId));\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm onSubmit={formSubmitHandler} />\r\n            <h2 className={s.title}>Contacts</h2>\r\n            <Filter filter={filter} onChange={changeFilter} />\r\n            <ContactList\r\n                contacts={getVisibleContact()}\r\n                onDeleteContactList={deleteContactList}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Component/App/App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}