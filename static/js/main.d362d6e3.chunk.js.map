{"version":3,"sources":["Component/ContactForm/Form.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/App/App.module.css","Component/Container/Container.module.css","Component/Container/Container.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","Component/App/App.js","hookLS/hookLS.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","agree","setAgree","handleChange","e","target","value","resetForm","section__form","form","preventDefault","contact","id","uuidv4","label","inputName","type","placeholder","pattern","title","required","onChange","label__agree","checkbox","checked","btn","disabled","Filter","filter","input","ContactList","contacts","onDeleteContactList","totalNumber","length","contactList","list","map","item","text","onClick","total__number","App","key","init_Value","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","HookLS","initialContacts","setContacts","setFilter","data","some","element","toLowerCase","alert","contactFilter","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d362d6e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__form\":\"Form_section__form__Z4TiH\",\"form\":\"Form_form__4zoJL\",\"label\":\"Form_label__351_K\",\"label__agree\":\"Form_label__agree__3pjm6\",\"checkbox\":\"Form_checkbox__1gZde\",\"inputName\":\"Form_inputName__1SsV-\",\"btn\":\"Form_btn__2n3w3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3vOQY\",\"list\":\"ContactList_list__2DLZ3\",\"item\":\"ContactList_item__g0dCl\",\"info\":\"ContactList_info__1dmw6\",\"text\":\"ContactList_text__2x6NT\",\"total__number\":\"ContactList_total__number__nxeCn\",\"btn\":\"ContactList_btn__1Exq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1QmDw\",\"label\":\"Filter_label__HuSD9\",\"input\":\"Filter_input__3b6Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2PFCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2zkta\"};","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\n\nfunction ContactForm({ onSubmit }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [agree, setAgree] = useState(false);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const contact = {\n            id: uuidv4(),\n            name,\n            number,\n        };\n        onSubmit(contact);\n        resetForm();\n    };\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleAgreeChange = e => {\n        setAgree(e.target.checked);\n        // this.setState({ agree: e.target.checked });\n    };\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n        setAgree(false);\n    };\n\n    return (\n        <div className={s.section__form}>\n            <form className={s.form} onSubmit={handleSubmit}>\n                <label className={s.label}>\n                    Name\n                    <input\n                        className={s.inputName}\n                        value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Enter name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <label className={s.label}>\n                    Number\n                    <input\n                        className={s.inputName}\n                        type=\"tel\"\n                        value={number}\n                        name=\"number\"\n                        placeholder=\"Enter number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={handleChange}\n                    />\n                </label>\n                <label className={s.label__agree}>\n                    <input\n                        className={s.checkbox}\n                        value={agree}\n                        type=\"checkbox\"\n                        name=\"agree\"\n                        checked={agree}\n                        onChange={handleAgreeChange}\n                    />\n                    agree\n                </label>\n\n                <button className={s.btn} disabled={!agree}>\n                    Add contact\n                </button>\n            </form>\n        </div>\n    );\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func,\n    handleChange: PropTypes.func,\n    handleAgreeChange: PropTypes.func,\n    nameId: PropTypes.number,\n    numberId: PropTypes.number,\n    agreeId: PropTypes.number,\n};\n\nexport default ContactForm;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filter, onChange }) {\n    return (\n        <div className={s.filter}>\n            <label className={s.label}>\n                Find contacts by name\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={filter}\n                    onChange={onChange}\n                />\n            </label>\n        </div>\n    );\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactList({ contacts, onDeleteContactList }) {\n    const totalNumber = contacts.length;\n\n    return (\n        <div className={s.contactList}>\n            <ul className={s.list}>\n                {contacts.map(({ name, number, id }) => (\n                    <li className={s.item} key={id}>\n                        <p className={s.text}>{name}:</p>\n                        <p className={`${s.text} ${s.number}`}>{number}</p>\n                        <button\n                            className={s.btn}\n                            type=\"button\"\n                            onClick={() => onDeleteContactList(id)}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <p className={s.total__number}>\n                Total number of subscribers:{totalNumber}\n            </p>\n        </div>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ),\n\n    onDeleteContactList: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport initialContacts from '../../initialContacts.json';\nimport { HookLS } from '../../hookLS/hookLS';\n\nfunction App() {\n    const [contacts, setContacts] = HookLS('contacts') ?? initialContacts;\n    const [filter, setFilter] = useState('');\n\n    //Зразок 2 як можна записати в локал сторідж--------------------------------\n    // const [contacts, setContacts] = useState(() => {\n    //     return JSON.parse(\n    //         window.localStorage.getItem('contacts') ?? initialContacts,\n    //     );\n    // });\n\n    // useEffect(() => {\n    //     window.localStorage.setItem('contacts', JSON.stringify(contacts));\n    // }, [contacts]);\n    //-----------------------------------------------------------------------\n\n    const formSubmitHandler = data => {\n        if (\n            contacts.some(\n                element =>\n                    element.name.toLowerCase() === data.name.toLowerCase(),\n            )\n        ) {\n            return alert('This contact has already been added to the list');\n        }\n\n        setContacts([data, ...contacts]);\n    };\n\n    const changeFilter = e => {\n        setFilter(e.target.value);\n    };\n\n    const getVisibleContact = () => {\n        const contactFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(contactFilter),\n        );\n    };\n\n    const deleteContactList = contactId => {\n        setContacts(contacts.filter(contact => contact.id !== contactId));\n    };\n\n    return (\n        <Container>\n            <h1 className={s.title}>Phonebook</h1>\n            <ContactForm onSubmit={formSubmitHandler} />\n            <h2 className={s.title}>Contacts</h2>\n            <Filter filter={filter} onChange={changeFilter} />\n            <ContactList\n                contacts={getVisibleContact()}\n                onDeleteContactList={deleteContactList}\n            />\n        </Container>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const HookLS = (key, init_Value) => {\n    const [state, setState] = useState(\n        () => JSON.parse(window.localStorage.getItem(key)) ?? init_Value,\n    );\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    return [state, setState];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Component/App/App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}